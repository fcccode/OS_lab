nasm -f elf32 {汇编源码} -o {目标文件.o}

gcc用法

gcc -m32 -march=i386 \
	-nostdlib -ffreestanding \
	-mpreferred-stack-boundary=2 -lgcc \
	-fno-builtin -Os -fno-omit-frame-pointer \
	-Wall -Wno-format -Wno-unused -Wno-write-strings -Werror \
	-fno-tree-ch -fno-stack-protector \
	-std=gnu11  -g \
    -c {C源代码.c} -o {目标文件.o}

部分参数解释：


-fno-builtin 要求gcc不适用内建函数优化c语言代码。如果不开启该选项，ISO C语言库中许多函数在编译时会被替换为以__builtin_ 开头的内置函数，不能通过链接自己的C语言库改变这些函数的行为，而我们做操作系统开发时是想用gcc现成的C语言运行时库（libgcc)也是没有的，要写出自己的C语言库，因此需要用该编译选项。

-Os 使用优化减少代码长度

-fno-omit-frame-pointer 由于编译器优化会可能会开启-fomit-frame-pointer 选项不生成堆栈指针，因此要-fno-omit-frame-pointer选项强制gcc生成函数调用关系的堆栈指针，用于backtrace调试

-Wall -Wno-format -Wno-unused -Werror 开启格式问题和未使用的变量外的所有警告，将警告当做错误，减少问题代码通过编译的可能性

-ffreestanding 仅引用标准C指定的“自立”头文件

-g 产生调试信息

-m32 指定生成32位代码

-fno-tree-ch 阻止gcc的一些代码重排行为

-fno-stack-protector 关闭gcc的堆栈溢出保护功能

生成binary文件

ld -m elf_i386 -static -Ttext 0x7c00 -nostdlib --nmagic --oformat binary {目标文件列表} -o {binary文件}

-m elf_i386 指定生成i386机器上的ELF格式代码

-Ttext 0x7c00 指定text段起始地址是0x7c00

-nostdlib 指定不链接标准库

--nmagic 不在二进制文件中加入magic number

--oformat binary 生成无头部的binary文件

反汇编：

首先必须生成elf格式的文件，其中带有调试信息。binary文件不带有调试信息

ld -m elf_i386 -static -Ttext 0x7c00 -nostdlib --nmagic {目标文件列表} -o {elf文件} 
(去掉了 --oformat binary指令)

objdump -S {elf文件} > {反汇编文件}
